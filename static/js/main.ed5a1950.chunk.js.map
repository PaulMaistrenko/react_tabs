{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["currentTab","title","tabs","find","tab","Tabs","selectedTab","setSelectedTab","className","map","classNames","id","href","onClick","event","currentTarget","textContent","content","App","useState","slice","ReactDOM","render","document","getElementById"],"mappings":"8LAeaA,EAAa,SACxBC,EACAC,GAEA,OAAOA,EAAKC,MAAK,SAAAC,GAAG,OAAIA,EAAIH,QAAUA,MAG3BI,EAAuB,SAAC,GAA2C,IAAzCH,EAAwC,EAAxCA,KAAMI,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eACxD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAL,GAAG,OACX,oBAEEI,UAAWE,IAAW,CAAE,YAAaN,IAAQE,IAC7C,UAASF,EAAIO,GAHf,SAKE,mBACEC,KAAI,WAAMR,EAAIO,IACd,UAAQ,UACRE,QAAS,SAACC,GACRP,EACEP,EAAWc,EAAMC,cAAcC,YAAad,KALlD,SASGE,EAAIH,SAbFG,EAAIO,WAoBjB,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,gBACGF,QADH,IACGA,OADH,EACGA,EAAaW,cC3CTf,G,kBAAO,CAClB,CAAES,GAAI,QAASV,MAAO,QAASgB,QAAS,eACxC,CAAEN,GAAI,QAASV,MAAO,QAASgB,QAAS,eACxC,CAAEN,GAAI,QAASV,MAAO,QAASgB,QAAS,iBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASnB,EAAW,QAASE,IAAnE,mBAAOI,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,UACG,uBADH,OAEGF,QAFH,IAEGA,OAFH,EAEGA,EAAaL,MAAMmB,OAAO,MAG7B,cAAC,EAAD,CAAMlB,KAAMA,EAAMI,YAAaA,EAAaC,eAAgBA,QCpBlEc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ed5a1950.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Dispatch, SetStateAction } from 'react';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n  selectedTab: Tab | undefined,\n  setSelectedTab: Dispatch<SetStateAction<Tab | undefined>>\n};\n\nexport const currentTab = function selectTab(\n  title: string | null,\n  tabs: Tab[],\n) {\n  return tabs.find(tab => tab.title === title);\n};\n\nexport const Tabs:React.FC<Props> = ({ tabs, selectedTab, setSelectedTab }) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classNames({ 'is-active': tab === selectedTab })}\n              data-cy={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={(event) => {\n                  setSelectedTab(\n                    currentTab(event.currentTarget.textContent, tabs),\n                  );\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { Tabs, currentTab } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(currentTab('Tab 1', tabs));\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {'Selected tab is Tab '}\n        {selectedTab?.title.slice(-1)}\n      </h1>\n\n      <Tabs tabs={tabs} selectedTab={selectedTab} setSelectedTab={setSelectedTab} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}